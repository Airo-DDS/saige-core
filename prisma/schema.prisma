// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @unique // Clerk User ID
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats     Chat[]
}

model Chat {
  id         String    @id @default(cuid())
  userId     String // Foreign key to Clerk User ID
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  title      String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  visibility String    @default("private") // "private" or "public"
  messages   Message[]

  @@index([userId, createdAt(sort: Desc)])
}

model Message {
  id          String   @id @default(cuid())
  chatId      String
  chat        Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  role        String // "user", "assistant", "system", "tool"
  content     String // Store the main text content here
  parts       Json? // Store complex parts like tool calls/results if needed (AI SDK structure)
  attachments Json? // Store attachment info (like URLs from Supabase Storage)
  createdAt   DateTime @default(now())
  vote        Vote? // Optional one-to-one relation

  @@index([chatId, createdAt(sort: Asc)])
}

model Vote {
  id        String   @id @default(cuid())
  messageId String   @unique // Each message can have only one vote record
  message   Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)
  chatId    String // Denormalized for easier querying
  isUpvoted Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([chatId]) // Index if querying votes by chat
}
